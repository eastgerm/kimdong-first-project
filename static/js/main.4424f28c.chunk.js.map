{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MoviePoster","_ref2","image","alt","react_default","a","createElement","className","src","title","MovieGenres","_ref3","genres","MovieSynopsis","_ref4","synopsis","lib_default","text","maxLine","ellipsis","trimRight","basedOn","Movie","_ref","map","index","key","App","state","_renderMovies","_this","movies","movie","console","log","src_Movie","title_english","medium_cover_image","id","_getMovies","_callee","regenerator_default","wrap","_context","prev","next","_callApi","sent","setState","stop","this","fetch","then","response","json","data","catch","err","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"2SAsBA,SAASA,EAATC,GAAmC,IAAbC,EAAaD,EAAbC,MAAOC,EAAMF,EAANE,IACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBAAiBC,IAAKN,EAAOC,IAAKA,EAAKM,MAAON,IAItE,SAASO,EAATC,GAA+B,IAATC,EAASD,EAATC,OAClB,OACIR,EAAAC,EAAAC,cAAA,QAAMC,UAAW,iBAAkBK,EAAnC,KAIR,SAASC,EAATC,GAAmC,IAAXC,EAAWD,EAAXC,SACpB,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBACZH,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACIY,KAAMF,EACNG,QAAS,IACTC,SAAU,MACVC,WAAS,EACTC,QAAS,aA0BVC,MA/Df,SAAAC,GAA6C,IAA7Bd,EAA6Bc,EAA7Bd,MAAMP,EAAuBqB,EAAvBrB,MAAMU,EAAiBW,EAAjBX,OAAOG,EAAUQ,EAAVR,SAC3B,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBACZH,EAAAC,EAAAC,cAACN,EAAD,CAAaE,MAAOA,EAAOC,IAAKM,KAEpCL,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBACZH,EAAAC,EAAAC,cAAA,UAAKG,GACLL,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBACXK,EAAOY,IAAI,SAACZ,EAAQa,GAAT,OAAmBrB,EAAAC,EAAAC,cAACI,EAAD,CAAaE,OAAQA,EAAQc,IAAKD,OAErErB,EAAAC,EAAAC,cAACO,EAAD,CAAeE,SAAUA,OCmC9BY,6MA7CXC,MAAO,KAQPC,cAAgB,WAWZ,OAVcC,EAAKF,MAAMG,OAAOP,IAAI,SAAAQ,GAEhC,OADAC,QAAQC,IAAIF,GACL5B,EAAAC,EAAAC,cAAC6B,EAAD,CACH1B,MAAOuB,EAAMI,cACblC,MAAO8B,EAAMK,mBACbX,IAAKM,EAAMM,GACX1B,OAAQoB,EAAMpB,OACdG,SAAUiB,EAAMjB,gBAM5BwB,gCAAa,SAAAC,IAAA,IAAAT,EAAA,OAAAU,EAAApC,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYf,EAAKgB,WADjB,OACHf,EADGY,EAAAI,KAETjB,EAAKkB,SAAS,CACVjB,WAHK,wBAAAY,EAAAM,SAAAT,EAAAU,WAObJ,SAAW,WACP,OAAOK,MAAM,yDACRC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKxB,SACvByB,MAAM,SAAAC,GAAG,OAAIxB,QAAQC,IAAIuB,yFA5B9BP,KAAKX,8CAgCL,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAW2C,KAAKtB,MAAMG,OAAS,MAAQ,gBACvCmB,KAAKtB,MAAMG,OAASmB,KAAKrB,gBAAkB,qBAzC1C6B,aCAlBC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4424f28c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinesEllipsis from 'react-lines-ellipsis'\r\nimport './Movie.scss';\r\n\r\nfunction Movie({title,image,genres,synopsis}){\r\n        return (\r\n            <div className={\"Movie\"}>\r\n                <div className={\"Movie__Column\"}>\r\n                    <MoviePoster image={image} alt={title}/>\r\n                </div>\r\n                <div className={\"Movie__Column\"}>\r\n                    <h1>{title}</h1>\r\n                    <div className={\"Movie__Genres\"}>\r\n                        {genres.map((genres, index) => <MovieGenres genres={genres} key={index} />)}\r\n                    </div>\r\n                    <MovieSynopsis synopsis={synopsis}/>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nfunction MoviePoster({image, alt}) {\r\n    return (\r\n        <img className={\"Movie__Poster\"} src={image} alt={alt} title={alt}/>\r\n    )\r\n}\r\n\r\nfunction MovieGenres({genres}) {\r\n    return (\r\n        <span className={\"Movie__Genres\"}>{genres} </span>\r\n    );\r\n}\r\n\r\nfunction MovieSynopsis({synopsis}) {\r\n    return (\r\n        <div className={\"Movie__Synopsis\"}>\r\n            <LinesEllipsis\r\n                text={synopsis}\r\n                maxLine={'3'}\r\n                ellipsis={'...'}\r\n                trimRight\r\n                basedOn={'letters'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    genres: PropTypes.array.isRequired,\r\n    synopsis:PropTypes.string.isRequired\r\n};\r\n\r\nMoviePoster.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n};\r\n\r\nMovieGenres.propTypes = {\r\n    genres: PropTypes.string.isRequired\r\n};\r\n\r\nMovieSynopsis.propTypes = {\r\n    synopsis: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movie;","import React, { Component } from 'react';\nimport './App.scss';\nimport Movie from './Movie';\n\nclass App extends Component {\n\n    state= {\n\n    };\n\n    componentDidMount() {\n        this._getMovies();\n    };\n\n    _renderMovies = () => {\n        const movies= this.state.movies.map(movie => {\n            console.log(movie)\n            return <Movie\n                title={movie.title_english}\n                image={movie.medium_cover_image}\n                key={movie.id}\n                genres={movie.genres}\n                synopsis={movie.synopsis}\n            />\n        });\n        return movies;\n    };\n\n    _getMovies = async () => {\n        const movies = await this._callApi()\n        this.setState({\n            movies\n        })\n    };\n\n    _callApi = () => {\n        return fetch('https://yts.am/api/v2/list_movies.json?sort_by=rating')\n            .then(response => response.json())\n            .then(json => json.data.movies)\n            .catch(err => console.log(err))\n    };\n\n    render() {\n        return (\n            <div className={this.state.movies ? \"App\" : \"App--Loading\"}>\n                {this.state.movies ? this._renderMovies() : \"Loading...\"}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}